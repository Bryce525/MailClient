package MailClient;

import Database.DisabledException;
import Database.InvalidCredentialsException;
import Database.QuerySubmitter;
import Database.UserExistsException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * This class is the Login GUI for logging in and registering new user
 *
 * @author Bryce, Steven, Hunter, Tristan
 */
public class LoginGUI extends javax.swing.JFrame {

  /**
   * Creates new form LoginGUI
   */
  public LoginGUI() {
    super("BCHT Mail");
    initComponents();
    query = QuerySubmitter.getInstance();
    try {
      //Connect to database
      query.connect();
    } catch (SQLException | NullPointerException ex) {
      JOptionPane.showMessageDialog(null, "ERROR", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LoginPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        loginPromptLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        secQstButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);

        LoginPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        usernameLabel.setText("Username:");
        usernameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordLabel.setText("Password:");
        passwordLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        loginPromptLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginPromptLabel.setText("Enter Username and password.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginPromptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginPromptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        secQstButton.setText("Forgot Password");
        secQstButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secQstButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordField)
                            .addComponent(usernameTextField)))
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(LoginPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(secQstButton))
                            .addGroup(LoginPanelLayout.createSequentialGroup()
                                .addComponent(loginButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(registerButton)))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(registerButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(secQstButton)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LoginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LoginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  //Function to handle logging in
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
      username = usernameTextField.getText();
      password = new String(passwordField.getPassword());
      if (!"".equals(username) && !"".equals(password)) {
        try {
          //If login is successful close this frame, and open mail client
          query.login(username, password);
          mailClient = new MailClientGUI();
          mailClient.setVisible(true);
          mailClient.startPolling();
          dispose();
        } catch (InvalidCredentialsException ex) {
          loginPromptLabel.setText(BADFIELD);
        } catch (DisabledException ex) {
          loginPromptLabel.setText(DISABLEFIELD);
        } catch (SQLException ex) {
          Logger.getLogger(LoginGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
      } else {
        loginPromptLabel.setText(NULLFIELD);
      }
    }//GEN-LAST:event_loginButtonActionPerformed

  //Function to handle registering new user
    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
      username = usernameTextField.getText();
      password = new String(passwordField.getPassword());
      if (!"".equals(username) && !"".equals(password)) {
        //Prompt user for first and last name.
        firstName = JOptionPane.showInputDialog(this,
                "Enter your first name:");
        lastName = JOptionPane.
                showInputDialog(this, "Enter your last name:");
        try {
          try {
            //Register user and if succesful launch mail client
            query.register(username, password, firstName, lastName,
                    "Standard");
            mailClient = new MailClientGUI();
            mailClient.setVisible(true);
            mailClient.startPolling();
            dispose();
          } catch (UserExistsException ex) {
            loginPromptLabel.setText(USEREXISTSFIELD);
            Logger.getLogger(LoginGUI.class.getName()).log(Level.SEVERE, null, ex);
          }

        } catch (SQLException ex) {
          loginPromptLabel.setText(SUSPICIOUSFIELD);
          Logger.getLogger(LoginGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
      } else {
        loginPromptLabel.setText(NULLFIELD);
      }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void secQstButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secQstButtonActionPerformed
      //Get the username for the account you forgot password
      String username_attempt = JOptionPane.showInputDialog(this,
              "Input your user name:");
      String question = "";
      String answer = "";
      Boolean QSet = false;
      Boolean reset = false;

      try {
        question = query.getSecQuestion(username_attempt);
        if (question == null) {
          question = "";
        }
      } catch (SQLException ex) {
        QSet = false;
      }
      try {
        if (question == null) {
          question = "";
        }
      } catch (NullPointerException npe) {
        question = "";
      }
      if (!question.equals("") & !question.equals("null")) {
        QSet = true;
      }
      if (QSet == true) {
        //Ask security question
        answer = JOptionPane.showInputDialog(this, question);
        try {
          //Verify security question
          reset = query.verifySecAnswer(username_attempt, answer);
        } catch (SQLException ex) {
          QSet = false;
        }
      } else {
        JOptionPane.showMessageDialog(this,
                "No security question on file. Contact your system admin.");
      }
      if (reset == true) {
        String newpass = JOptionPane.showInputDialog(this,
                "Please enter your new password.");
        try {
          if (newpass == null) {
            newpass = "";
          }
        } catch (NullPointerException npe) {
          newpass = "";
        }
        if (!newpass.equals("") & !newpass.equals(null)) {
          try {
            //Login with new password
            query.resetUserPassword(username_attempt, newpass);
            query.login(username_attempt, newpass);
            mailClient = new MailClientGUI();
            mailClient.setVisible(true);
            mailClient.startPolling();
            dispose();
          } catch (SQLException | InvalidCredentialsException | DisabledException ex) {
            JOptionPane.showMessageDialog(null, "ERROR", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
          }
        } else {
          JOptionPane.
                  showMessageDialog(this, "Password change cancelled.");
        }
      } else if (QSet) {
        JOptionPane.showMessageDialog(this, "Incorrect password");
      }
    }//GEN-LAST:event_secQstButtonActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info
              : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
      JOptionPane.showMessageDialog(null, "ERROR", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
    }
    //</editor-fold>

    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new LoginGUI().setVisible(true);
      }
    });
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginPromptLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton secQstButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables

  private MailClientGUI mailClient;
  private QuerySubmitter query;
  private String username, password, firstName, lastName;
  private final String NULLFIELD
          = "Please complete required fields";
  private final String DISABLEFIELD
          = "This account has been disabled.";
  private final String BADFIELD
          = "Your username or password is not valid.";
  private final String SUSPICIOUSFIELD = "Entry error: use alphanumeric";

  private final String USEREXISTSFIELD = "Username already exists.";
}
