package MailClient;

import Database.QuerySubmitter;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 * This class is the administrative GUI for controlling the database
 * @author Bryce, Steven, Hunter, Tristan
 */
public class AdminGUI extends javax.swing.JFrame {

    /**
     * Creates new form AdminGUI
     * @param client - Client for calling view account, and resetting upon close
     */
    public AdminGUI(MailClientGUI client) {
        super("Database Settings");
        initComponents();
        this.client = client;
        query = QuerySubmitter.getInstance();
        admin = query.getUser();
        try {
            usersTable.setModel(query.getContacts().getModel());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        usersTable.setRowSelectionInterval(0, 0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        adminToolsPanel = new javax.swing.JPanel();
        disableAccountRadioButton = new javax.swing.JRadioButton();
        adminRadioButton = new javax.swing.JRadioButton();
        deleteAccountButton = new javax.swing.JButton();
        viewAccountButton = new javax.swing.JButton();
        adminToolsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(usersTable);

        adminToolsPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        disableAccountRadioButton.setText("Account Disabled");
        disableAccountRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disableAccountRadioButtonActionPerformed(evt);
            }
        });

        adminRadioButton.setText("Administrator");
        adminRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminRadioButtonActionPerformed(evt);
            }
        });

        deleteAccountButton.setText("Delete Account");
        deleteAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountButtonActionPerformed(evt);
            }
        });

        viewAccountButton.setText("View Account");
        viewAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAccountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminToolsPanelLayout = new javax.swing.GroupLayout(adminToolsPanel);
        adminToolsPanel.setLayout(adminToolsPanelLayout);
        adminToolsPanelLayout.setHorizontalGroup(
            adminToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminToolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteAccountButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(adminToolsPanelLayout.createSequentialGroup()
                        .addGroup(adminToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(disableAccountRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adminRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(viewAccountButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        adminToolsPanelLayout.setVerticalGroup(
            adminToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminToolsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewAccountButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteAccountButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disableAccountRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adminRadioButton))
        );

        adminToolsLabel.setText("Admin Tools");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminToolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(adminToolsLabel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(adminToolsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminToolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Handler for clicking a user in the contacts table
    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        setUserValues();
    }//GEN-LAST:event_usersTableMouseClicked

    //Handler for setting the mail client view to specified user in table
    private void viewAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAccountButtonActionPerformed
        query.setUser(userToAdmin);
        client.updateMailbox();
    }//GEN-LAST:event_viewAccountButtonActionPerformed

    //Handler for deleting specified user from table
    private void deleteAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountButtonActionPerformed
        try {
            //Delete account then update table to reflect removal
            query.deleteAccount(userToAdmin);
            usersTable.setModel(query.getContacts().getModel());
            usersTable.setRowSelectionInterval(0, 0);
            setUserValues();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_deleteAccountButtonActionPerformed

    //Handler for closing adminTool that resets mailclient view to admin
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        query.setUser(admin);
        client.updateMailbox();
    }//GEN-LAST:event_formWindowClosed

    //Handler for adding or removing admin priveleges
    private void adminRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminRadioButtonActionPerformed
        try {
            
            query.changeUserPermission(userToAdmin, adminRadioButton.isSelected());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_adminRadioButtonActionPerformed

    //Handler for disabling or enabling a user account
    private void disableAccountRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disableAccountRadioButtonActionPerformed
        try {
            if (!userToAdmin.equals("root")){
                if (disableAccountRadioButton.isSelected()) {
                    query.disableUser(userToAdmin);
                } else {
                    query.enableUser(userToAdmin, "Standard");
                }
            }
        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(null, sqle.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_disableAccountRadioButtonActionPerformed

    //Function to populate AdminGUI state based on selected user
    private void setUserValues() {
        userToAdmin = (String) usersTable.getModel().getValueAt(usersTable.
                getSelectedRow(), 0);
        try {
            adminRadioButton.setSelected(query.isAdmin(userToAdmin));
            disableAccountRadioButton.setSelected(query.isDisabled(userToAdmin));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton adminRadioButton;
    private javax.swing.JLabel adminToolsLabel;
    private javax.swing.JPanel adminToolsPanel;
    private javax.swing.JButton deleteAccountButton;
    private javax.swing.JRadioButton disableAccountRadioButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable usersTable;
    private javax.swing.JButton viewAccountButton;
    // End of variables declaration//GEN-END:variables
    private final MailClientGUI client;
    private QuerySubmitter query;
    private String admin;
    private String userToAdmin;
}
